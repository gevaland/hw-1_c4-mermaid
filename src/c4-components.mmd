C4Context
    accTitle: Web Application Container
    accDescr: Components

    Person(person, "Customer", "Customer who want to check ethcis of companies")

    ContainerDb(dwh, "Hadoop", "HDFS", "Data Warehouse")
    Container(kafka, "Kafka", "Kafka", "Message broker")

    Container_Boundary(webApp, "Mobile Application", "") {
        Component(sendTextToChat, "Chat message", "Swift", "Text request")
        Component(sendImageToChat, "Chat image", "Swift", "Image request")
        Component(getAnswerApp, "Get answer in application", "Swift", "Get answer app")
    }

    Container_Boundary(api, "API Application", "") {
        Component(sendTextToKafka, "Send text", "JSON", "Send text")
        Component(sendImageToKafka, "Send image", "JSON", "Send image")
        Component(getAnswer, "Get answer", "JSON", "Get answer")
    }

    Container_Boundary(spark, "Spark", "") {
        Component(getData, "Get Data", "JSON", "Get Data from Kafka")
        Component(processText, "Process Text", "JSON", "Process Text")
        Component(processImage, "Process Image", "JSON", "Process Image")
        Component(preparedData, "Prepared Data", "JSON", "Prepared Data")
        Component(makePrediction, "Predict", "JSON", "Predict")
    }

    Rel(person, sendTextToChat, "Visits", "RPC-JSON")
    Rel(person, sendImageToChat, "Visits", "RPC-JSON")
    Rel(person, getAnswerApp, "Gets", "RPC-JSON")

    Rel(sendTextToChat, sendTextToKafka, "Sends to", "JSON")
    Rel(sendImageToChat, sendImageToKafka, "Sends to", "JSON")
    Rel(getAnswerApp, getAnswer, "Reads from", "JSON")

    Rel(sendTextToKafka, kafka, "Writes to", "Kafka")
    Rel(sendImageToKafka, kafka, "Writes to", "Kafka")
    Rel(getAnswer, kafka, "Reads from", "Kafka")

    Rel(getData, kafka, "Reads from", "Kafka")
    Rel(processText, getData, "Reads from", "SPARK")
    Rel(processImage, getData, "Reads from", "SPARK")
    Rel(preparedData, processImage, "Reads from", "SPARK")
    Rel(preparedData, processText, "Reads from", "SPARK")
    Rel(preparedData, dwh, "Writes to", "HDFS")
    Rel(preparedData, makePrediction, "Make call", "SPARK")
    Rel(makePrediction, kafka, "Save to", "Kafka")

